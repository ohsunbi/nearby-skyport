name: Dump & Deploy data every 5 min

on:
  schedule:
    - cron: "*/3 * * * *"  # 3분마다 실행 (UTC 기준)
  workflow_dispatch:        # 수동 실행 + 강제배포 스위치
    inputs:
      force_deploy:
        description: "Deploy even if no changes detected"
        required: false
        default: "false"

permissions:
  contents: read

jobs:
  dump-and-deploy:
    runs-on: ubuntu-latest
    env:
      # ✅ 배포용 서비스계정 인증(모든 스텝 공통)
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/nearby-sa.json
      # ✅ 별도 프로젝트면 nearby-data, (멀티사이트라면 cpk-equip-track)
      FIREBASE_PROJECT_ID: nearby-data
      # ✅ 덤프 출력 절대경로
      OUTPUT_DIR: ${{ github.workspace }}/public/data

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps & Firebase CLI
        run: |
          npm ci || npm i
          npm i -g firebase-tools

      - name: Write service accounts from Secrets
        # CPK_SERVICE_ACCOUNT_JSON: cpk-equip-track의 Firestore 읽기 전용
        # NEARBY_SERVICE_ACCOUNT_JSON: nearby-data의 Hosting Admin
        run: |
          echo '${{ secrets.CPK_SERVICE_ACCOUNT_JSON }}' > serviceAccountKey.json
          echo '${{ secrets.NEARBY_SERVICE_ACCOUNT_JSON }}' > nearby-sa.json

      - name: Debug SA project and hosting sites
        run: |
          echo "Service Account project_id:"
          node -e "console.log(JSON.parse(require('fs').readFileSync('nearby-sa.json','utf8')).project_id)"
          echo ""
          echo "Hosting sites in this project:"
          firebase hosting:sites:list --project "$FIREBASE_PROJECT_ID"

      - name: Run dump script (Firestore -> JSON)
        env:
          PROJECT_ID: cpk-equip-track       # 읽어올 원본 프로젝트
        run: |
          mkdir -p "$OUTPUT_DIR"
          npm run dump

      - name: Verify dumped files
        run: |
          echo "---- public tree (max depth 2) ----"
          find public -maxdepth 2 -type f -print || true
          test -s public/data/equipment_ALL.json || (echo "❌ public/data 가 비어있습니다. dump_equipment.js 출력 경로/권한/컬렉션명을 확인하세요."; exit 1)

      - name: Detect changes in public/data
        id: diff
        run: |
          if git diff --quiet -- public/data; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Safety check (ensure correct site)
        if: steps.diff.outputs.changed == 'true' || github.event.inputs.force_deploy == 'true'
        run: |
          node -e "const f=require('fs'); const v=JSON.parse(f.readFileSync('firebase.json','utf8')); if(!(v.hosting && v.hosting.site==='nearby-data')){console.error('firebase.json hosting.site != nearby-data'); process.exit(1)}; console.log('firebase.json points to hosting site \"nearby-data\" ✅');"

      - name: Deploy to Firebase Hosting
        if: steps.diff.outputs.changed == 'true' || github.event.inputs.force_deploy == 'true'
        run: |
          firebase deploy --only hosting --project "$FIREBASE_PROJECT_ID" --non-interactive
